version: '3'

services:
  discover-server:
    build:
      context: ./discovery_server
      dockerfile: Dockerfile
    container_name: discover-server
    ports:
      - "8761:8761"
    networks:
      - TNB-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    expose:
      - "2181"
    networks:
      - TNB-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - TNB-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      - redevable-service
      - categorie-service
      - terrain-service
    environment:
      REDEVABLE_URL: http://REDEVABLE-SERVICE
      CATEGORIE_URL: http://CATEGORIE-SERVICE
      TERRAIN_URL: http://TERRAIN-SERVICE
    networks:
      - TNB-network

  identity-service:
    build:
      context: ./identity-service
      dockerfile: Dockerfile
    container_name: identity-service
    ports:
      - "9999:9999"
    depends_on:
      - mysqli
    networks:
      - TNB-network

  redevable-service:
    build:
      context: ./RedevableMicroservice
      dockerfile: Dockerfile
    container_name: redevable-service
    ports:
      - "8081:8081"
    depends_on:
      - discover-server
      - mysqlr
      - zookeeper
      - kafka
    networks:
      - TNB-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G

  categorie-service:
    build:
      context: ./CategorieTerrainMicroservice
      dockerfile: Dockerfile
    container_name: categorie-service
    ports:
      - "8082:8082"
    depends_on:
      - discover-server
      - mysqlc
      - zookeeper
      - kafka
    networks:
      - TNB-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G

  terrain-service:
    build:
      context: ./TerrainMicroservice
      dockerfile: Dockerfile
    container_name: terrain-service
    ports:
      - "8084:8084"
    depends_on:
      - discover-server
      - mysqlt
      - zookeeper
      - kafka
    networks:
      - TNB-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G

  mysqlr:
    image: mysql:latest
    container_name: mysqlr
    ports:
      - "9999:3306"
    volumes:
      - mysql_dbr:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=tnb_redevable
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - TNB-network

  mysqlc:
    image: mysql:latest
    container_name: mysqlc
    ports:
      - "9998:3306"
    volumes:
      - mysql_dbc:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=tnb_categorie
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - TNB-network

  mysqlt:
    image: mysql:latest
    container_name: mysqlt
    ports:
      - "9997:3306"
    volumes:
      - mysql_dbt:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=tnb_terrain
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - TNB-network

  mysqli:
    image: mysql:latest
    container_name: mysqli
    ports:
      - "9996:3306"
    volumes:
      - mysql_dbi:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=tnb_identity
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - TNB-network

networks:
  TNB-network:
    driver: bridge
    # Add any additional configurations for your MySQL service here
volumes:
  mysql_dbr:
  mysql_dbc:
  mysql_dbt:
  mysql_dbi:
